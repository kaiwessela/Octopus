@font-face {
	font-family: 'Open Sans';
	font-weight: 400;
	font-style: normal;
	src: url('../fonts/Open_Sans/regular.woff2');
}

@font-face {
	font-family: 'Open Sans';
	font-weight: 600;
	font-style: normal;
	src: url('../fonts/Open_Sans/semibold.woff2');
}

@font-face {
	font-family: 'Fira Mono';
	src: url('../fonts/Fira_Mono/regular.woff2');
}

:root {
	--black: #000000;
	--white: #ffffff;
	--gray: #bbbbbb;
	--blue: #1da1f2;
	--green: #00bb00;
	--red: #f04747;
	--yellow: #faa61a;
	--shiny-gray: #bbbbbb66;
	--shiny-blue: #1da1f266;
	--shiny-green: #00bb0066;
	--shiny-red: #f0474766;
	--shiny-yellow: #faa61a66;
	--dark-gray: #444444;
}

html {
	font-family: 'Open Sans';
	font-size: 100%;
}

body {
	display: grid;
	grid-template-columns: [grid-start nav-start] 12rem [nav-end content-start] 70rem [content-end] 1fr [grid-end];
	grid-template-rows: [grid-start header-start] 3rem [header-end] auto auto [grid-end];
	min-height: 100vh;
	margin: 0;
	padding: 0;
	background-color: #20202f0f;
}

.nojs {
	display: none;
}

header {
	grid-column: grid-start / grid-end;
	grid-row: header-start / header-end;
	display: flex;
	justify-content: space-between;
	color: var(--white);
	background-color: #20202f;
}

header > div {
	margin: 0 1rem;
	line-height: 2.75rem;
	font-size: 1.1rem;
}

header .darkened {
	color: #ffffffaa;
}

header .astronauth .expand {
	visibility: hidden;
	position: absolute;
	top: 3rem;
	margin: 0;
	padding: 0.5rem;
	background-color: #ffffff66;
	line-height: normal;
}

header .astronauth:hover .expand {
	visibility: visible;
}

nav {
	grid-column: nav-start / nav-end;
	height: 100%;
	background-color: #20202f11;
}

nav ul {
	width: 100%;
	margin: 0;
	padding: 0;
	list-style-type: none;
}

nav ul li {
	display: contents;
}

nav ul a {
	display: list-item;
	width: 100%;
	margin: 0;
	padding: 0.25rem 0.5rem;
	box-sizing: border-box;
	color: var(--black);
	text-decoration: none;
}

nav ul a.current {
	color: var(--blue);
}

nav ul a:hover,
nav ul a:focus {
	background-color: #20202f11;
}

main {
	grid-column: content-start / content-end;
	padding: 0 1rem 10rem;
}

footer {
	grid-column: grid-start / grid-end;
	padding: 0 1rem;
	font-size: 0.8rem;
	color: var(--dark-gray);
	background-color: #20202f08;
}

article {
	max-width: 50rem;
	margin: 1rem 0;
	padding: 0.5rem;
	background-color: var(--white);
}

article > * {
	display: block;
	margin: 0.5em 0;
}

article > div {
	margin: 0.75rem 0;
}

article > :first-child {
	margin-top: 0;
}

article > :last-child {
	margin-bottom: 0;
}

table {
	width: 100%;
	border-collapse: collapse;
}

table tr {
	padding: 0.25rem 0;
	border-bottom: 1px solid var(--shiny-gray);
	border-top: 1px solid var(--shiny-gray);
}

table tr > td:first-child {
	width: 8rem;
	padding-right: 1rem;
}

table th {
	text-align: left;
}

div {
	margin: 0.5rem 0;
}

h2 {
	font-size: 1.1rem;
	margin: 0.5em 0;
}

small {
	color: var(--dark-gray);
}

em {
	color: var(--dark-gray);
	font-weight: normal;
	font-style: normal;
	text-decoration: none;
}

code {
	font-family: 'Fira Mono';
	width: max-content;
	padding: 0 0.2rem;
	background-color: var(--shiny-gray);
	border-radius: 0.1rem;
}

form {
	max-width: 70rem;
	margin: 2rem 0;
}

label {
	margin: 1rem 0 0.5rem;
}

label span {
	display: block;
}

label .name {
	font-size: 1.1rem;
	font-weight: 600;
}

label .conditions {
	font-style: italic;
	color: var(--dark-gray);
}

/*label .infos {}*/

input,
textarea,
div.pseudoinput {
	display: block;
	max-width: 100%;
	margin: 0.5rem 0 1rem;
	padding: 0.5rem;
	font-family: 'Fira Mono';
	font-size: 1rem;
	background-color: var(--white);
	border: none;
	border-bottom: 0.1rem solid var(--gray);
	outline: 0;
	box-shadow: none;
}

input:focus,
textarea:focus {
	border-color: var(--blue);
}

input.valid,
textarea.valid {
	border-color: var(--green);
}

input.invalid,
textarea.invalid {
	border-color: var(--red);
}

input.tooshort,
textarea.tooshort {
	border-color: var(--yellow);
}

input[disabled],
textarea[disabled],
input[readonly],
textarea[readonly] {
	color: #000000;
	background-color: var(--shiny-gray);
}

textarea {
	resize: vertical;
}

select {
	display: block;
	margin: 0.5rem 0 1rem;
	padding: 0.5rem;
	font-family: 'Fira Mono';
	font-size: 1rem;
	background-color: var(--white);
	border: 0.1rem solid var(--gray);
	outline: 0;
	box-shadow: none;
	border-radius: 0.25rem;
}

div.pseudoinput {
	max-width: 45rem;
}

.message {
	--background-color: var(--shiny-gray);
	--border-color: var(--gray);
	margin: 1rem 0;
	padding: 1rem;
	border: 0.2rem solid var(--border-color);
	border-radius: 0.5rem;
	background-color: var(--background-color);
}

a,
a.inline {
	color: var(--blue);
	text-decoration: underline;
}

a:hover,
a:focus,
a.inline:hover,
a.inline:focus {
	text-decoration: none;
}

a.button {
	--background-color: var(--shiny-blue);
	--border-color: var(--blue);
	display: inline-block;
	margin: 0.25rem 0.25rem 0.25rem 0;
	padding: 0.25rem 0.5rem;
	font-family: 'Open Sans';
	font-size: 0.9rem;
	text-decoration: none;
	color: var(--black);
	background-color: var(--background-color);
	border-bottom: 0.1rem solid var(--border-color);
	border-radius: 0.25rem;
}

button {
	--background-color: var(--shiny-gray);
	--border-color: var(--gray);
	margin: auto;
	padding: 0.25rem 0.5rem;
	font-family: 'Open Sans';
	font-size: 0.9rem;
	text-transform: uppercase;
	color: var(--black);
	background-color: var(--background-color);
	border: 0.1rem solid var(--border-color);
	border-radius: 0.25rem;
}

a.button.gray,
button.gray,
.message.gray,
span.tag.gray {
	--background-color: var(--shiny-gray);
	--border-color: var(--gray);
}

a.button.blue,
button.blue,
.message.blue,
button.current,
span.tag.blue {
	--background-color: var(--shiny-blue);
	--border-color: var(--blue);
}

a.button.green,
button.green,
.message.green,
span.tag.green {
	--background-color: var(--shiny-green);
	--border-color: var(--green);
}

a.button.red,
button.red,
.message.red,
span.tag.red {
	--background-color: var(--shiny-red);
	--border-color: var(--red);
}

a.button.yellow,
button.yellow,
.message.yellow,
span.tag.yellow {
	--background-color: var(--shiny-yellow);
	--border-color: var(--yellow);
}

a.button.new::before,
button.new::before {
	content: '+';
	font-weight: 800;
	padding-right: 0.25em;
	color: var(--border-color);
}

a.button.back::before,
button.back::before {
	content: '←';
	font-weight: 800;
	padding-right: 0.25em;
	color: var(--border-color);
}

span.tag {
	--background-color: var(--shiny-gray);
	display: inline-block;
	padding: 0.25em;
	margin: 0 0.25rem;
	font-family: 'Open Sans';
	font-size: 1em;
	text-decoration: none;
	color: var(--black);
	background-color: var(--background-color);
	border-radius: 0.25em;
}

.grid {
	display: grid;
	grid-template-columns: repeat(auto-fill, minmax(7rem, 15rem));
	width: 100%;
}

.grid article {
	height: max-content;
	margin: 0.25rem;
}

.dialog {
	visibility: hidden;
	position: fixed;
	height: 100vh;
	width: 100vw;
	top: 0;
	left: 0;
	margin: 0;
	padding: 0;
	overflow-y: scroll;
	background-color: #00000066;
}

.dialog form {
	font-family: 'Open Sans';
	margin: 2rem auto;
	background-color: #f1f1f2;
	padding: 1rem;
}

.dialog.open {
	visibility: visible;
}

.dialog .grid button {
	text-transform: none;
	border: none;
	border-radius: 0;
	background-color: transparent;
}

img {
	width: 100%;
	height: auto;
}

.template {
	display: none;
}



/* CHECKBODGE */
.checkbodge {
	width: 100%;
	font-size: 0.9rem;
	line-height: 1.6em;
	display: inline-flex;
	margin: 0.5rem 0 1rem;
}

.checkbodge.turn-around {
	flex-direction: row-reverse;
	justify-content: flex-end;
}

.checkbodge input[type=checkbox] {
	opacity: 0;
	position: absolute;
}

.checkbodge > .label-field {
	margin-right: 0.5rem;
	font-size: 1.1em;
	color: var(--dark-gray);
}

.checkbodge.turn-around > .label-field {
	margin-left: 0.5rem;
	margin-top: 0;
	margin-bottom: 0;
}

.checkbodge > .bodgecheckbox {
	display: inline-block;
	vertical-align: top;
	width: 1.2em;
	height: 1.2em;
	border: 0.2em solid #00000044;
	border-radius: 0.25em;
	background-color: var(--white);
	transition-duration: 0.25s;
	margin: 0;
}

input:checked ~ .bodgecheckbox,
input[type=checkbox]:hover ~ .bodgecheckbox,
input[type=checkbox]:focus ~ .bodgecheckbox,
.checkbodge:hover > .bodgecheckbox,
.checkbodge:focus > .bodgecheckbox {
	border-color: var(--blue);
}

input:disabled ~ .bodgecheckbox,
input:disabled:hover ~ .bodgecheckbox,
input:disabled:focus ~ .bodgecheckbox {
	background-color: var(--shiny-gray);
	border-color: var(--gray);
}

.checkbodge > .bodgecheckbox > .bodgetick {
	display: block;
	position: relative;
	height: inherit;
	width: inherit;
	opacity: 0;
	transform: rotate(45deg);
	left: 3%;
	top: 5%;
	transition-duration: 0.2s;
	transition-timing-function: ease-in;
	margin: 0;
}

.checkbodge > .bodgecheckbox > .bodgetick > span {
	display: block;
	height: 12%;
	width: 12%;
	background-color: var(--blue);
	border-radius: 0.075em;
	position: absolute;
	bottom: 20%;
	right: 44%;
	box-sizing: border-box;
	transition-duration: 0.2s;
	transition-timing-function: ease;
	margin: 0;
}

input:disabled ~ .bodgecheckbox > .bodgetick > span {
	background-color: var(--gray);
}

input:checked ~ .bodgecheckbox > .bodgetick {
	opacity: 100;
}

input:checked ~ .bodgecheckbox > .bodgetick > .bodgetick-down {
	width: 40%;
}

input:checked ~ .bodgecheckbox > .bodgetick > .bodgetick-up {
	height: 80%;
}


/* RADIOBODGE */
.radiobodge {
	--color: var(--blue);
	font-size: 0.9rem;
	line-height: 1.3em;
	display: inline-flex;
	margin: 0.1rem 0 1rem;
}

.radiobodge.green {
	--color: var(--green);
}

.radiobodge.yellow {
	--color: var(--yellow);
}

.radiobodge.red {
	--color: var(--red);
}

.radiobodge.turn-around {
	flex-direction: row-reverse;
	justify-content: flex-end;
}

.radiobodge input[type=radio] {
	opacity: 0;
	position: absolute;
}

.radiobodge > .label-field {
	margin-right: 0.5rem;
	font-size: 1.1em;
	color: var(--dark-gray);
}

.radiobodge.turn-around > .label-field {
	margin-left: 0.5rem;
	margin-top: 0;
	margin-bottom: 0;
}

.radiobodge > .bodgeradio {
	display: inline-block;
	vertical-align: top;
	width: 1em;
	height: 1em;
	border: 0.2em solid var(--color);
	border-radius: 0.7em;
	background-color: var(--white);
	transition-duration: 0.25s;
	margin: 0;
}

input[type=radio]:hover ~ .bodgeradio,
input[type=radio]:focus ~ .bodgeradio,
.radiobodge:hover > .bodgeradio,
.radiobodge:focus > .bodgeradio {
	border-color: var(--color);
}

.radiobodge > .bodgeradio > .bodgetick {
	display: block;
	position: relative;
	height: 60%;
	width: 60%;
	background-color: var(--color);
	border-radius: 50%;
	top: 20%;
	left: 20%;
	box-sizing: border-box;
	transition-duration: 0.2s;
	transition-timing-function: ease;
	margin: 0;
	opacity: 0;
}

.radiobodge input:disabled ~ .bodgeradio {
	border-color: var(--dark-gray);
	background-color: var(--gray);
	opacity: 0.5;
}

input:disabled ~ .bodgeradio > .bodgetick {
	background-color: var(--dark-gray);
}

input:checked ~ .bodgeradio > .bodgetick {
	opacity: 1;
}


/* TIMEINPUT */
.timeinput label {
	display: inline-block;
	font-size: 0.8rem;
	margin: 0.5rem 0.5rem 1rem 0;
}

.timeinput input {
	margin: 0;
}


/* MODAL MODAL MODAL */
.modal {
	display: none;
	visibility: hidden;
	position: fixed;
	margin: 0;
	top: 0;
	left: 0;
	height: 100vh;
	width: 100vw;
	background-color: #00000088;
}

.modal h2 {
	font-size: 1.4rem;
}

.modal.open {
	display: block;
	visibility: visible;
}

.modal .box {
	max-height: calc(100vh - 10rem);
	width: 50rem;
	margin: 5rem auto;
	padding: 1rem;
	overflow-y: scroll;
	background-color: #e3e3e3;
}

.modal form {
	margin: 0;
}



div.listinput {
	display: block;
	width: max-content;
	margin: 0.5rem 0 1rem;
	padding: 0 0.5rem 0.5rem;
	font-size: 1rem;
	border: 0.1rem solid var(--gray);
	outline: 0;
	box-shadow: none;
}

.listinput table {
	border: none;
	border-spacing: 0 0.5rem;
}

.listinput table th {
	text-align: left;
	padding: 0.25rem;
}

.listinput .items .item {
	background-color: var(--white);
	border-radius: 0.25rem;
}

.listinput .items .item td {
	margin: 0;
	padding: 0.25rem;
}

.listinput .item input[type=text],
.listinput .item input[type=number],
.listinput .item select {
	border: none;
	background-color: var(--shiny-gray);
	border-radius: 0.25rem;
	margin: 0;
	padding: 0.25rem;
}



div.relationinput {
	display: block;
	max-width: 100%;
	margin: 0.5rem 0 1rem;
	padding: 0 0.5rem 0.5rem;
	font-size: 1rem;
	border: 0.1rem solid var(--gray);
	outline: 0;
	box-shadow: none;
}

.relation {
	display: grid;
	grid-template-columns: 1fr auto auto auto;
	margin: 0.5rem 0;
	padding: 0.25rem;
	background-color: var(--white);
	border-radius: 0.25rem;
}

.relation .title {
	margin: 0.25rem;
}

.relation input.action ~ .title::before {
	content: '·';
	display: inline-block;
	font-family: 'Fira Mono';
	font-size: 1.8em;
	line-height: 0.8em;
	color: var(--blue);
	background-color: var(--shiny-blue);
	margin-right: 0.5rem;
	text-align: center;
	height: 1.5rem;
	width: 1.5rem;
	border-radius: 0.1rem;
	vertical-align: middle;
}

.relation input.action[value=new] ~ .title::before {
	content: '+';
	color: var(--green);
	background-color: var(--shiny-green);
}

.relation input.action[value=edit] ~ .title::before {
	content: '~';
	color: var(--yellow);
	background-color: var(--shiny-yellow);
}

.relation input.action[value=delete] ~ .title::before {
	content: '-';
	color: var(--red);
	background-color: var(--shiny-red);
}

.relation input.action[value=delete] ~ .title span {
	text-decoration: line-through;
}

.relation input.action[value=ignore] ~ button[data-action=restore],
.relation input.action[value=new] ~ button[data-action=restore],
.relation input.action[value=edit] ~ button[data-action=restore] {
	display: none;
}

.relation input.action[value=delete] ~ button[data-action=remove] {
	display: none;
}

.relation input[type=text],
.relation input[type=number] {
	border: none;
	background-color: var(--shiny-gray);
	border-radius: 0.25rem;
	margin: 0 0.25rem;
	padding: 0.25rem;
	font-size: 0.9rem;
}

.multiselectmodal article.marked .label-field::after {
	content: '(ausgewählt)';
	font-style: italic;
	color: var(--gray);
	margin-left: 0.5rem;
}
